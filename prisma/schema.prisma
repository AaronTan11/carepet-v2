// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}


 enum UserRole {
   USER
   ADMIN
   STAFF
 }

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? 
    access_token      String? 
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? 
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    @@index([userId])

}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?      
    image         String?
    role          UserRole @default(USER) 
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// Other Tables Starts Here
model Pet {
  id                 Int              @id @default(autoincrement())
  name               String
  species            String
  breed              String
  color              String
  dateOfBirth        DateTime?
  sex                String
  neuteredSpayed     Boolean
  ownerName          String
  ownerContactInfo   String
  MedicalRecord      MedicalRecord[]
}

model MedicalRecord {
  id                    Int      @id @default(autoincrement())
  vaccinationType       String?
  vaccinationDate       DateTime?
  knownIllnesses        String?
  currentMedications    String?
  allergies             String?
  weight                Float?
  size                  Float?
  veterinarianName      String?
  veterinarianContactInfo String?
  petId                 Int
  Pet                   Pet     @relation(fields: [petId], references: [id])

  @@index([petId])
}
